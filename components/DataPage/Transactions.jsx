import { SUB_HEADER_LG_CLASS, TEXT_MEDIUM_CLASS } from 'common-util/classes';
import { PREDICT_AGENT_CLASSIFICATION } from 'common-util/constants';
import {
  agentTxCountsQuery,
  registryGlobalsQuery,
} from 'common-util/graphql/queries';
import SectionWrapper from 'components/Layout/SectionWrapper';
import { ExternalLink } from 'components/ui/typography';
import { CodeSnippet } from './CodeSnippet';

export const TransactionsInfo = () => {
  return (
    <>
      <SectionWrapper id="transactions">
        <h2 className={SUB_HEADER_LG_CLASS}>Transactions</h2>

        <div className="space-y-6 mt-4">
          <p>
            Tracks the total number of transactions executed by all agents
            across all supported networks. This metric provides insight into the
            overall activity level and transaction volume generated by the
            autonomous agent ecosystem.
          </p>

          <p>
            The following query is used to compute total daily transactions:
          </p>

          <h3 className={`${TEXT_MEDIUM_CLASS} font-bold`}>
            Registry Globals query
          </h3>

          <p className="text-purple-600">
            Subgraph links:{' '}
            {[
              process.env.NEXT_PUBLIC_GNOSIS_REGISTRY_SUBGRAPH_URL,
              process.env.NEXT_PUBLIC_BASE_REGISTRY_SUBGRAPH_URL,
              process.env.NEXT_PUBLIC_MODE_REGISTRY_SUBGRAPH_URL,
              process.env.NEXT_PUBLIC_OPTIMISM_REGISTRY_SUBGRAPH_URL,
              process.env.NEXT_PUBLIC_CELO_REGISTRY_SUBGRAPH_URL,
              process.env.NEXT_PUBLIC_ETHEREUM_REGISTRY_SUBGRAPH_URL,
              process.env.NEXT_PUBLIC_ARBITRUM_REGISTRY_SUBGRAPH_URL,
              process.env.NEXT_PUBLIC_POLYGON_REGISTRY_SUBGRAPH_URL,
            ].map((link, index) => (
              <ExternalLink key={index} href={link} className="mr-2">
                {index + 1}
              </ExternalLink>
            ))}
          </p>
          <CodeSnippet>{registryGlobalsQuery}</CodeSnippet>
        </div>
      </SectionWrapper>

      <SectionWrapper id="predict-transactions-by-type">
        <h2 className={SUB_HEADER_LG_CLASS}>
          Predict: Transactions by Agent Type
        </h2>

        <div className="space-y-6 mt-4">
          <p>
            Breaks down total Predict transactions by agent category using
            agent-level counters. Categories mirror the UI: Traders, Mechs
            (Prediction Brokers), and Market Creators/Closers.
          </p>

          <h3 className={`${TEXT_MEDIUM_CLASS} font-bold`}>
            Classification used
          </h3>
          <div className="space-y-1">
            <p>
              <strong>Market maker</strong> agent IDs:{' '}
              {PREDICT_AGENT_CLASSIFICATION.market_maker.join(', ')}
            </p>
            <p>
              <strong>Valory trader</strong> agent IDs:{' '}
              {PREDICT_AGENT_CLASSIFICATION.valory_trader.join(', ')}
            </p>
            <p>
              <strong>Mech</strong> agent IDs:{' '}
              {PREDICT_AGENT_CLASSIFICATION.mech.join(', ')}
            </p>
            {/* Other trader category intentionally excluded */}
          </div>

          <p>The following query is used to fetch per-agent tx counts:</p>

          <h3 className={`${TEXT_MEDIUM_CLASS} font-bold`}>
            Agent Performances query
          </h3>

          <p className="text-purple-600">
            Subgraph link:{' '}
            <ExternalLink
              href={process.env.NEXT_PUBLIC_GNOSIS_REGISTRY_SUBGRAPH_URL}
              className="mr-2"
            >
              Gnosis
            </ExternalLink>
          </p>
          <CodeSnippet>{agentTxCountsQuery}</CodeSnippet>
        </div>
      </SectionWrapper>
    </>
  );
};
